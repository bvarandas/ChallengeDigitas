version: '3.4'

services:
  orderbook.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - rabbitmq
      - elasticsearch
    ports:
      - "5200:80"
    networks:
      - challenge
  ocelot.apigateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - orderbook.api
    ports:
      - "9010:80"
  
  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - challenge
  
  mongodb:
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
       MONGO_INITDB_ROOT_USERNAME: root
       MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db
    networks:
      - challenge
  
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - challenge
  
  kibana:
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
  
  orderbook.worker:
    environment:
      - DOTNET_ENVIRONMENT=Development
      - "ElasticConfiguration__Uri=http://elasticsearch:9200"
    depends_on:
      - rabbitmq
      - elasticsearch
    ports:
      - "5303:5303"
    networks:
      - challenge


volumes:
  mongo_data:
  elasticsearch-data:  

networks:
    challenge:
        driver: bridge  